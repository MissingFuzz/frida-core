backend_sources += files(
  'gdbstub.vala',
)
gdbstub_script_runtime = custom_target('frida-gdbstub',
  input: [
    'frida-gdbstub/package.json',
    'frida-gdbstub/package-lock.json',
    'frida-gdbstub/tsconfig.json',
    'frida-gdbstub/src/output.ts',
    'frida-gdbstub/src/entrypoint.ts',
    'frida-gdbstub/src/regs.ts',
    'frida-gdbstub/src/input.ts',
    'frida-gdbstub/src/command.ts',
    'frida-gdbstub/src/base64.ts',
    'frida-gdbstub/src/commands/vFile/setFs.ts',
    'frida-gdbstub/src/commands/vFile/open.ts',
    'frida-gdbstub/src/commands/vFile/vFiles.ts',
    'frida-gdbstub/src/commands/vFile/readlink.ts',
    'frida-gdbstub/src/commands/vFile/close.ts',
    'frida-gdbstub/src/commands/vFile/pread.ts',
    'frida-gdbstub/src/commands/g.ts',
    'frida-gdbstub/src/commands/qThreadInfo.ts',
    'frida-gdbstub/src/commands/m.ts',
    'frida-gdbstub/src/commands/qSupported.ts',
    'frida-gdbstub/src/commands/qStartNoAckMode.ts',
    'frida-gdbstub/src/commands/question.ts',
    'frida-gdbstub/src/commands/qXfer/features.ts',
    'frida-gdbstub/src/commands/qXfer/execFile.ts',
    'frida-gdbstub/src/commands/qXfer/auxv.ts',
    'frida-gdbstub/src/util.ts',
  ],
  output: [
    'frida-gdbstub.js',
  ],
  command: [
    find_program('generate-frida-gdbstub.py'),
    meson.current_source_dir(),
    meson.current_build_dir(),
  ],
)
backend_sources += custom_target('frida-data-gdbstub',
  input: [
    'gdbstub.resources',
    gdbstub_script_runtime,
  ],
  output: [
    'frida-data-gdbstub.vapi',
    'frida-data-gdbstub.h',
    'frida-data-gdbstub.c',
    'frida-data-gdbstub-blob.S',
  ],
  command: [
    resource_compiler,
    '--toolchain=' + host_toolchain,
    '-c', '@INPUT0@',
    '-o', join_paths(meson.current_build_dir(), 'frida-data-gdbstub'),
    '@INPUT1@',
  ],
)
